{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI repository where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    },
    "gwdnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique gateway public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.westus.cloudapp.azure.com/RDWeb"
      },
      "defaultValue": "cloudapps"
    },
    "adDomainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AD domain. For example contoso.com"
      },
      "defaultValue": "contoso.com"
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The existing vnet name of AD domain. For example 'vnet' or 'contosovnet'"
      },
      "defaultValue": "vnet"
    },
    "snetName": {
      "type": "string",
      "metadata": {
        "description": "The existing subnet name of AD domain. For example 'subnet' or 'contososubnet'"
      },
      "defaultValue": "subnet"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
      },
      "defaultValue": "vmadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      },
      "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
    },
    "imageSKU": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server SKU"
      },
      "defaultValue": "2016-Datacenter"
    },
    "numberOfRdshInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    },
    "vmRdshSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_A2m_v2",
        "Standard_A4m_v2",
        "Standard_A8m_v2",
        "Standard_B2ms",
        "Standard_D2_v3",
        "Standard_D4_v3",
        "Standard_D8_v3",
        "Standard_D16_v3",
        "Standard_D32_v3",
        "Standard_D48_v3",
        "Standard_D64_v3"
      ],
      "metadata": {
        "description": "The size of the RDSH VMs"
      },
      "defaultValue": "Standard_A4m_v2"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "lbGwName": {
      "type": "string"
    },
    "availGwName": {
      "type": "string",
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    },
    "availCbName": {
      "type": "string",
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    },
    "vmGwName": {
      "type": "string",
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    },

    "vmCbName": {
      "type": "string",
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    }
  },
  "variables": {
    "assetLocation": "[concat(parameters('_artifactsLocation'),'/','rds-deployment')]",
    "vmPrefix": "vm-",
    "pipPrefix": "pip-",
    "nicPrefix": "nic-",
    "adName": "ad-1",
    "adPDCVMName": "[concat(variables('vmPrefix'),variables('adName'))]",
    "adVMSize": "Standard_B2ms",
    "adTemplateURL": "[concat(variables('assetLocation'),'/adVmTemplate.json')]",
    "adVmDeployment": "CreateAdVms",
    "adVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('adVmDeployment'))]",
    "deployPrimaryAdTemplateURL": "[concat(variables('assetLocation'),'/deployPrimaryAD.json')]",
    "deployPrimaryAd": "DeployPrimaryAd",
    "deployPrimaryAdID": "[concat('Microsoft.Resources/deployments/', variables('deployPrimaryAd'))]",

    "vnetwithDNSTemplateURL": "[concat(variables('assetLocation'),'/vnet-with-dns-server.json')]",
    "updateVNetDNS1": "updateVNetDNS",

    "pipLbAdName": "[concat(variables('pipPrefix'),variables('adName'))]",
    "pipLbAdId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipLbAdName'))]",
    "pipLbGwName": "[tolower('pip-gw')]",
    "pipLbGwId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('pipLbGwName'))]",

    "lbAdName": "[concat('lb-ad-',resourceGroup().name)]",
    "lbAdId": "[resourceId('Microsoft.Network/loadBalancers',variables('lbAdName'))]",
    "lbAdFe": "lb-ad-fe",
    "lbAdFeConfigId": "[concat(variables('lbAdId'),'/frontendIPConfigurations/',variables('lbAdFe'))]",
    "lbAdBe": "lb-ad-be",
    "rdpPort": 3389,
    "lbAdNatRuleRdpName": "ADRDPNAT",
    "lbAdNatRuleRdpId": "[concat(variables('lbAdId'),'/inboundNatRules/',variables('lbAdNatRuleRdpName'))]",

    "lbGwName": "[concat('lb-gw',resourceGroup().name)]",
    "lbGwId": "[resourceId('Microsoft.Network/loadBalancers',variables('lbGwName'))]",
    "lbGwFe": "[concat(parameters('lbGwName'),'-fe')]",
    "lbGwFeConfigId": "[concat(variables('lbGwId'),'/frontendIPConfigurations/',variables('lbGwFe'))]",
    "lbGwBe": "[concat(parameters('lbGwName'),'-be')]",
    "lbGwBeAddressPoolId": "[concat(variables('lbGwId'),'/backendAddressPools/',variables('lbGwBe'))]",

    "dnsLabelPrefix": "[tolower(concat('dns', resourceGroup().name))]",
    "storageAccountName": "[tolower(concat('stdiag',uniqueString(resourceGroup().id)))]",
    "storageAccountType": "Standard_LRS",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "vnetAddressRange": "10.21.0.0/16",
    "snetAddressRange": "10.21.0.0/24",
    "dnsServerPrivateIp": "10.21.0.4",
    "snetId": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')),'/subnets/', parameters('snetName'))]",

    "nsgName": "nsg-rds",
    "availabilitySetPlatformFaultDomainCount": "2",
    "availabilitySetPlatformUpdateDomainCount": "5",
    "availRdshName": "avail-rdsh",
    "nicAdName": "[concat('nic-ad-',resourceGroup().name)]",
    "nicGwName": "[concat(variables('nicPrefix'),parameters('vmGwName'))]",
    "nicCbName": "[concat(variables('nicPrefix'),parameters('vmCbName'))]",
    "nicRdshName": "nic-rdsh-",
    "vmRdshName": "vm-rdsh-",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]"
  },
  "resources": [
    {
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "properties": {
        "securityRules": [
          {
            "name": "rule1",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vnetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressRange')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('snetName')]",
            "properties": {
              "addressPrefix": "[variables('snetAddressRange')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('pipLbAdName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[parameters('vnetName')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabelPrefix')]"
        }
      }
    },
    {
      "name": "[variables('pipLbGwName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('gwdnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availGwName')]",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availCbName')]",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availRdshName')]",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "name": "[variables('lbAdName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('pipLbAdId')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbAdFe')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('pipLbAdId')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbAdBe')]"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('lbAdNatRuleRdpName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbAdFeConfigId')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[variables('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "name": "[variables('lbGwName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2015-06-15",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('pipLbGwId')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbGwFe')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('pipLbGwId')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbGwBe')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule01",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbGwFeConfigId')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbGwBeAddressPoolId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(variables('lbGwId'),'/probes/tcpProbe01')]"
              }
            }
          },
          {
            "name": "LBRule02",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbGwFeConfigId')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbGwBeAddressPoolId')]"
              },
              "protocol": "Udp",
              "frontendPort": 3391,
              "backendPort": 3391,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(variables('lbGwId'),'/probes/tcpProbe02')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe01",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "tcpProbe02",
            "properties": {
              "protocol": "Tcp",
              "port": 3391,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbGwFeConfigId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3389,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "name": "[variables('adVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('lbAdId')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('adTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('adPDCVMName')]"
          },
          "storageAccount": {
            "value": "[variables('storageAccountName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmSize": {
            "value": "[variables('adVMSize')]"
          },
          "subnetResourceId": {
            "value": "[variables('snetId')]"
          },
          "lbAdNatRuleRdpId": {
            "value": "[variables('lbAdNatRuleRdpId')]"
          },
          "adDNicName": {
            "value": "[variables('nicAdName')]"
          },
          "primaryAdIpAddress": {
            "value": "[variables('dnsServerPrivateIp')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployPrimaryAd')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('deployPrimaryAdTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "primaryADName": {
            "value": "[variables('adPDCVMName')]"
          },
          "domainName": {
            "value": "[parameters('adDomainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "assetLocation": {
            "value": "[variables('assetLocation')]"
          }
        }
      }
    },
    {
      "name": "[variables('updateVNetDNS1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "vnetAddressRange": {
            "value": "[variables('vnetAddressRange')]"
          },
          "snetName": {
            "value": "[parameters('snetName')]"
          },
          "snetRange": {
            "value": "[variables('snetAddressRange')]"
          },
          "dnsServerAddress": {
            "value": [
              "[variables('dnsServerPrivateIp')]"
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicGwName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('lbGwId')]",
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('snetId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbGwBeAddressPoolId')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbGwId'),'/inboundNatRules/rdp')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('dnsServerPrivateIp')]"
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicCbName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('lbAdId')]",
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('snetId')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('dnsServerPrivateIp')]"
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicRdshName'), copyindex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nic-loop-rdsh",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "[variables('lbAdId')]",
        "[variables('adVmDeploymentID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('snetId')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "[variables('dnsServerPrivateIp')]"
          ]
        }
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmGwName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicGwName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2ms"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availGwName'))]"
        },
        "osProfile": {
          "computerName": "gateway",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmGwName'),'-osdisk')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicGwName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2018-10-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "vm-gw-1/gateway",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmGwName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
              "configurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('adDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmRdshName'), copyindex(1))]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "rdsh-vm-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "[variables('deployPrimaryAdID')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicRdshName'), copyindex(1))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmRdshSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availRdshName'))]"
        },
        "osProfile": {
          "computerName": "[concat('rdsh-', copyindex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('rdsh-',copyindex(1))]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicRdshName'), copyindex(1)))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2018-10-01",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('vmRdshName'), copyindex(1),'/sessionhost')]",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmRdshName'), copyindex(1)))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\SessionHost",
              "Properties": {
                "DomainName": "[parameters('adDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUsername')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmCbName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('deployPrimaryAdID')]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicCbName'))]",
        "rdsh-vm-loop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2ms"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availCbName'))]"
        },
        "osProfile": {
          "computerName": "broker",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmCbName'),'-osdisk')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicCbName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmCbName'), '/rdsdeployment')]",
      "apiVersion": "2018-10-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmCbName'))]",
        "[concat('Microsoft.Compute/virtualMachines/',parameters('vmGwName'),'/extensions/gateway')]",
        "rdsh-vm-loop"
      ],
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        },
        "publisher": "Microsoft.Powershell",
        "settings": {
          "modulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
          "configurationFunction": "Configuration.ps1\\RDSDeployment",
          "properties": {
            "adminCreds": {
              "UserName": "[parameters('adminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            },
            "connectionBroker": "[concat('broker.',parameters('adDomainName'))]",
            "domainName": "[parameters('adDomainName')]",
            "externalfqdn": "[reference(variables('pipLbGwName')).dnsSettings.fqdn]",
            "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]",
            "sessionHostNamingPrefix": "rdsh-",
            "webAccessServer": "[concat('gateway.',parameters('adDomainName'))]"
          }
        },
        "type": "DSC",
        "typeHandlerVersion": "2.11"
      }
    }
  ]
}
