{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "metadata": {
        "description": "Project name will be suffixed and tagged to resources"
      },
      "defaultValue": "test"
    },
    "gwDnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.westus.cloudapp.azure.com/RDWeb"
      },
      "defaultValue": "cloudapps"
    },
    "adDomainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing AD domain. For example contoso.com"
      },
      "defaultValue": "contoso.com"
    },
    "domainNetbios": {
      "type": "string",
      "metadata": {
        "description": "The name of the domain Netbios. For example contoso"
      },
      "defaultValue": "contoso"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The existing name of the administrator account in the domain. Exclusion list: 'administrator'. For example johnadmin"
      },
      "defaultValue": "cloudadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account in the domain"
      },
      "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
    },
    "vmAdSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the AD VMs"
      },
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_B2ms",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ],
      "defaultValue": "Standard_B2ms"
    },
    "vmGwSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the GW VMs"
      },
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_B2ms",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ],
      "defaultValue": "Standard_B2ms"
    },
    "numberOfGwInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Number of additional RD Gateway / RD Web Access servers. value of 1 will give a total of 2 for HA."
      }
    },
    "vmCbSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the RDSH VMs"
      },
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_B2ms",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ],
      "defaultValue": "Standard_B2ms"
    },
    "numberOfCbInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of total Remote Desktop Session Hosts to create."
      }
    },
    "vmShSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the RDSH VMs"
      },
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2"
      ],
      "defaultValue": "Standard_A8m_v2"
    },
    "numberOfShInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of total Remote Desktop Session Hosts to create."
      }
    },
    "vmImageSku": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server SKU"
      },
      "defaultValue": "2016-Datacenter"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "_artifactsLocation": "https://raw.githubusercontent.com/viozcomau/rds-deployment-ha/master/",
    "basicRDSDeploymentLocation": "[concat(variables('_artifactsLocation'),'rds-deployment-basic')]",
    "basicRDSDeploymentTemplate": "azuredeploy.json",
    "basicRDSDeploymentName": "CreateBasicRDSDeployment",
    "basicRDSDeploymentURL": "[concat(variables('basicRDSDeploymentLocation'),'/',variables('basicRDSDeploymentTemplate'))]",
    "rdGatewayWebHAexistingRDSLocation": "[concat(variables('_artifactsLocation'),'rds-deployment-ha-gateway')]",
    "rdGatewayWebHAexistingRDSTemplate": "azuredeploy.json",
    "rdGatewayWebHAexistingRDS": "CreateRDGatewayWebAccessHA",
    "rdGatewayWebHAURL": "[concat(variables('rdGatewayWebHAexistingRDSLocation'),'/',variables('rdGatewayWebHAexistingRDSTemplate'))]",
    "sslDeploymentexistingRDSLocation": "[concat(variables('_artifactsLocation'),'rds-update-certificate')]",
    "sslDeploymentexistingRDSTemplate": "azuredeploy.json",
    "sslDeploymentexistingRDS": "configureSSLonRDSDeployment",
    "sslDeploymentURL": "[concat(variables('sslDeploymentexistingRDSLocation'),'/',variables('sslDeploymentexistingRDSTemplate'))]",
    "RdcbHaDeploymentexistingRDSLocation": "[concat(variables('_artifactsLocation'),'rds-deployment-ha-broker')]",
    "RdcbHaDeploymentexistingRDSTemplate": "azuredeploy.json",
    "RdcbHaDeploymentexistingRDS": "configureRdcbHaonRDSDeployment",
    "RdcbHaDeploymentURL": "[concat(variables('RdcbHaDeploymentexistingRDSLocation'),'/',variables('RdcbHaDeploymentexistingRDSTemplate'))]",

    "vmPrefix": "vm-",
    "vnetPrefix": "vnet-",
    "snetPrefix": "snet-",
    "lbPrefix": "lb-",
    "pipPrefix": "pip-",
    "availPrefix": "avail-",

    "adName": "ad-",
    "gwName": "gw-",
    "cbName": "cb-",
    "shName": "sh-",

    "vnetName": "[concat(variables('vnetPrefix'),parameters('projectName'))]",
    "snetName": "[concat(variables('snetPrefix'),parameters('projectName'))]",

    "pipLbGwName": "[concat(variables('pipPrefix'),'gw')]",

    "lbGwName": "[concat(variables('lbPrefix'),'gw')]",
    "lbGwBe": "[concat(variables('lbGwName'),'-be')]",


    "availGwName": "[concat(variables('availPrefix'),'gw')]",
    "availCbName": "[concat(variables('availPrefix'),'cb')]",

    "stDiagName": "[tolower(concat('stdiag',uniqueString(resourceGroup().id)))]",

    "vmAdName": "[concat(variables('vmPrefix'), variables('adName'))]",
    "vmGwName": "[concat(variables('vmPrefix'), variables('gwName'))]",
    "vmCbName": "[concat(variables('vmPrefix'), variables('cbName'))]",
    "vmShName": "[concat(variables('vmPrefix'), variables('shName'))]",

    "adFqdnServerName": "[concat(variables('vmAdName'), '.', parameters('adDomainName'))]",
    "gwExternalFqdn": "[concat(variables('vmGwName'), '.', parameters('adDomainName'))]",
    "cbFqdnServerName": "[concat(variables('vmCbName'), '.', parameters('adDomainName'))]",

    "brokerHostName": "[variables('vmCbName')]"
  },
  "resources": [
    {
      "name": "[variables('basicRDSDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('basicRDSDeploymentURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[variables('basicRDSDeploymentLocation')]"
          },
          "gwDnsLabelPrefix": {
            "value": "[parameters('gwDnsLabelPrefix')]"
          },
          "adDomainName": {
            "value": "[parameters('adDomainName')]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "snetName": {
            "value": "[variables('snetName')]"
          },
          "stDiagName": {
            "value": "[variables('stDiagName')]"
          },
          "pipLbGwName": {
            "value": "[variables('pipLbGwName')]"
          },
          "lbGwName": {
            "value": "[variables('lbGwName')]"
          },
          "lbGwBe": {
            "value": "[variables('lbGwBe')]"
          },
          "availGwName": {
            "value": "[variables('availGwName')]"
          },
          "availCbName": {
            "value": "[variables('availCbName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "vmAdSize": {
            "value": "[parameters('vmAdSize')]"
          },
          "vmGwSize": {
            "value": "[parameters('vmGwSize')]"
          },
          "vmCbSize": {
            "value": "[parameters('vmCbSize')]"
          },
          "vmShSize": {
            "value": "[parameters('vmShSize')]"
          },
          "numberOfShInstances": {
            "value": "[parameters('numberOfShInstances')]"
          },
          "vmImageSku": {
            "value": "[parameters('vmImageSku')]"
          },
          "vmAdName": {
            "value": "[variables('vmAdName')]"
          },
          "vmGwName": {
            "value": "[variables('vmGwName')]"
          },
          "vmCbName": {
            "value": "[variables('vmCbName')]"
          },
          "vmShName": {
            "value": "[variables('vmShName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "name": "[variables('rdGatewayWebHAexistingRDS')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments/', variables('basicRDSDeploymentName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('rdGatewayWebHAURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[variables('rdGatewayWebHAexistingRDSLocation')]"
          },
          "lbGwName": {
            "value": "[variables('lbGwName')]"
          },
          "lbGwBe": {
            "value": "[variables('lbGwBe')]"
          },
          "adDomainName": {
            "value": "[parameters('adDomainName')]"
          },
          "domainNetbios": {
            "value": "[parameters('domainNetbios')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "numberOfGwInstances": {
            "value": "[parameters('numberOfGwInstances')]"
          },
          "existingCbServer": {
            "value": "[variables('cbFqdnServerName')]"
          },
          "existingGwName": {
            "value": "[variables('vmGwName')]"
          },
          "WebURL": {
            "value": "[variables('gwExternalFqdn')]"
          },
          "stDiagName": {
            "value": "[variables('stDiagName')]"
          },
          "vmImageSku": {
            "value": "[parameters('vmImageSku')]"
          },
          "vmGwSize": {
            "value": "[parameters('vmGwSize')]"
          },
          "availGwName": {
            "value": "[variables('availGwName')]"
          },
          "rgName": {
            "value": "[resourceGroup().name]"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "snetName": {
            "value": "[variables('snetName')]"
          }
        }
      }
    }
  ],
  "outputs": {
  }
}